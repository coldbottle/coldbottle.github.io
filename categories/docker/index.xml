<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on coldbottle</title>
    <link>https://coldbottle.github.io/categories/docker/</link>
    <description>Recent content in docker on coldbottle</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://coldbottle.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>도커(Docker) 프롤로그</title>
      <link>https://coldbottle.github.io/posts/docker/docker-prologue/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldbottle.github.io/posts/docker/docker-prologue/</guid>
      <description>도커를 설명할 때 실행환경 가상화라고 합니다.
Computer Science에서 있었던 가상화/추상화를 위한 흐름을 살펴보면, 도커(Docker)가 무엇인지와 각광받는 이유를 알 수 있습니다.
Computer Science가 전공이 아닌 독자들도 이해할 수 있게 설명하기 위해서 단편화된 내용들로 구성 하였습니다.
Virtual Memory 질문으로 시작해 보겠습니다! OS가 없는 상황에서 프로그램을 개발할 때 고려해야 하는 것은 무엇일까요?
이 질문에 대답하기에 앞서 OS가 하는 역할에 대해서 알면 위의 질문에 답을 할수 있을 것 같습니다.
OS는 Computer의 자원(CPU, Memory, Storage등)을 관리하는 역할을 하는 S/W입다.</description>
    </item>
    
    <item>
      <title>도커(Docker) Intro</title>
      <link>https://coldbottle.github.io/posts/docker/docker-intro/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldbottle.github.io/posts/docker/docker-intro/</guid>
      <description>이번 글에서는 지난글에 이어서 docker를 사용할 때 꼭 알고 있어야 하는 개념을 정리해 보았습니다.
docker vs dockerd docker를 설치하게 되면 2가지 Software를 얻게됩니다.
dockerd가 docker daemon의 줄인 말로 Server의 역할을 하고 사용자의 입력을 받아서 Container를 제어합니다.
다른 하나인 docker는 CLI(CommandLine Interface)형태로 제공된 Clinet으로 dockerd에게 명령을 전달할 때 사용됩니다.
CLI 형태의 Client도 있지만, GUI(Graphic User Inferace)형태의 Client가 Docker Desktop for Window and Mac도 존재합니다.
Image vs Container CS(Computer Science)전공인 독자들을 프로그램과 프로세스의 차이를 알고있을 것입니다.</description>
    </item>
    
    <item>
      <title>Docker Part1</title>
      <link>https://coldbottle.github.io/posts/docker/docker-part1/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldbottle.github.io/posts/docker/docker-part1/</guid>
      <description>Part1에서는 Docker의 Image를 만들지 않고 사용해 보는 것을 목표로 합니다.
Installation 자세한 설치 방법은 운영체제에 따라 달라서 링크로 대체합니다.
 ubuntu mac window  docker pull Docker Image를 다운 받는 명령입니다.
다음과 같은 구조를 가지고 있습니다. 좀더 자세한 정보는 링크를 확인하면 됩니다.
docker pull [OPTIONS] NAME[:TAG|@DIGEST]  NAME  Dockerhub의 경우에 NAME에는 이름만 적어줍니다. 만약, 다른 Container Registry를 사용할 경우에는 이곳에 주소를 적어줍니다.   TAG  TAG가 주어지지 않으면 latest가 default입니다.</description>
    </item>
    
  </channel>
</rss>
